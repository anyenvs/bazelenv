#!/usr/bin/env bash
#
# Summary: Set or show the local application-specific bazel version
#
# Usage: bazelenv local <version>
#        bazelenv local --unset
#
# Sets the local application-specific bazel version by writing the
# version name to a file named `.bazel-version'.
#
# When you run a bazel command, bazelenv will look for a `.bazel-version'
# file in the current directory and each parent directory. If no such
# file is found in the tree, bazelenv will use the global bazel version
# specified with `bazelenv global'. A version specified with the
# `BAZELENV_VERSION' environment variable takes precedence over local
# and global versions.
#
# <version> should be a string matching a bazel version known to bazelenv.
# The special version string `system' will use your default system bazel.
# Run `bazelenv versions' for a list of available bazel versions.

set -e
[ -n "$BAZELENV_DEBUG" ] && set -x

# Provide bazelenv completions
if [ "$1" = "--complete" ]; then
  echo --unset
  echo system
  exec bazelenv-versions --bare
fi

BAZELENV_VERSION="$1"

if [ "$BAZELENV_VERSION" = "--unset" ]; then
  rm -f .bazel-version
elif [ -n "$BAZELENV_VERSION" ]; then
  bazelenv-version-file-write .bazel-version "$BAZELENV_VERSION"
else
  if version_file="$(bazelenv-version-file "$PWD")"; then
    bazelenv-version-file-read "$version_file"
  else
    echo "bazelenv: no local version configured for this directory" >&2
    exit 1
  fi
fi
